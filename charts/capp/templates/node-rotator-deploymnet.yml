{{- define "serialize-node-selector" -}}
{{- $local := dict "first" true -}}
{{- range $k, $v := . -}}{{- if not $local.first -}},{{- end -}}{{- $k -}}={{- $v -}}{{- $_ := set $local "first" false -}}{{- end -}}
{{- end -}}
{{- define "serialize-tolerations" -}}
{{- $local := dict "first" true -}}
{{- range $k, $v := . -}}{{- if not $local.first -}},{{- end -}}{{- $v.key -}}={{- $v.value -}}{{- $_ := set $local "first" false -}}{{- end -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-node-rotator
  labels:
    app: {{ .Release.Name }}-node-rotator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-node-rotator
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-node-rotator
    spec:
      {{- if .Values.nodeRotator.serviceAccount.create }}
      serviceAccountName: {{ .Release.Name }}-node-rotator
      {{- else -}}
      serviceAccountName: {{ .Values.nodeRotator.serviceAccount.name }}
      {{- end }}
      {{- if .Values.nodeRotator.nodeSelector }}
      nodeSelector: {{ .Values.nodeRotator.nodeSelector | toJson }}
      {{- end }}
      containers:
      - name: rotator
        image: {{ .Values.nodeRotator.image.repository }}:{{ .Values.nodeRotator.image.tag }}
        env:
        {{- if .Values.nodeRotator.targetNodeSelector }}
        - name: TARGET_NODE_SELECTOR
          value: {{ include "serialize-node-selector" .Values.nodeRotator.targetNodeSelector }}
        {{- end }}
        - name: IN_CLUSTER
          value: "true"
        - name: REPLICAS
          value: {{ .Values.nodeRotator.replicas | quote }}
        - name: NAME
          value: {{ .Release.Name }}-node-rotator
        {{- if .Values.nodeRotator.targetTolerations }}
        - name: TARGET_TOLERATIONS
          value: {{ include "serialize-tolerations" .Values.nodeRotator.targetTolerations }}
        - name: ROTATION_INTERVAL_SECONDS
          value: {{ .Values.nodeRotator.intervalSeconds | quote }}
        {{- end }}
